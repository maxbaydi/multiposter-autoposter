# -*- coding: utf-8 -*-
from db_manager import DBManager
from datetime import datetime

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
db = DBManager('autoposter.db')

print("üìä –ü—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å:")
print("=" * 50)

# –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å
recent = db.get_recent_publications(days=1)
today = datetime.now().date().isoformat()

for row in recent:
    brand, topic, platform, published_at = row
    date_only = published_at[:10]
    if date_only == today:
        print(f"‚úÖ {brand} - {topic} - {platform} - {published_at}")

print(f"\nüìä –í—Å–µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Å–µ–≥–æ–¥–Ω—è: {len([r for r in recent if r[3][:10] == today])}")

print("\nüìã –í—Å–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è:")
print("=" * 50)
all_recent = db.get_recent_publications(days=3)
for row in all_recent:
    brand, topic, platform, published_at = row
    print(f"{brand} - {topic} - {platform} - {published_at}") 