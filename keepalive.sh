#!/bin/bash

# ===================================================================
# AutoPoster KeepAlive Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ autoposter
# ===================================================================

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
AUTOPOSTER_SCRIPT="$SCRIPT_DIR/autoposter.py"
HEALTH_FILE="$SCRIPT_DIR/autoposter.health"
PID_FILE="$SCRIPT_DIR/autoposter.pid"
LOG_FILE="$SCRIPT_DIR/logs/keepalive.log"
PYTHON_CMD="/opt/python/python-3.8.8/bin/python"

# –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
CHECK_INTERVAL=30          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
HEALTH_TIMEOUT=600         # –¢–∞–π–º–∞—É—Ç health check (10 –º–∏–Ω—É—Ç)
MAX_RESTART_ATTEMPTS=5     # –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
RESTART_DELAY=60           # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏

# –°—á–µ—Ç—á–∏–∫–∏
RESTART_COUNT=0
LAST_RESTART_TIME=0

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

error() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: $1" | tee -a "$LOG_FILE" >&2
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è autoposter.py
check_script_exists() {
    if [[ ! -f "$AUTOPOSTER_SCRIPT" ]]; then
        error "Autoposter script –Ω–µ –Ω–∞–π–¥–µ–Ω: $AUTOPOSTER_SCRIPT"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python
check_python() {
    if ! command -v "$PYTHON_CMD" &> /dev/null; then
        error "Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
ensure_log_dir() {
    local log_dir=$(dirname "$LOG_FILE")
    if [[ ! -d "$log_dir" ]]; then
        mkdir -p "$log_dir"
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ PID –ø—Ä–æ—Ü–µ—Å—Å–∞ autoposter
get_autoposter_pid() {
    if [[ -f "$PID_FILE" ]]; then
        local pid=$(cat "$PID_FILE" 2>/dev/null)
        if [[ -n "$pid" ]] && kill -0 "$pid" 2>/dev/null; then
            echo "$pid"
            return 0
        else
            # PID —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω
            rm -f "$PID_FILE"
        fi
    fi
    
    # –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ –∏–º–µ–Ω–∏
    pgrep -f "python.*autoposter.py"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è autoposter —á–µ—Ä–µ–∑ health file
check_health() {
    if [[ ! -f "$HEALTH_FILE" ]]; then
        return 1  # Health file –Ω–µ –Ω–∞–π–¥–µ–Ω
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    local health_timestamp=$(stat -c %Y "$HEALTH_FILE" 2>/dev/null)
    local current_time=$(date +%s)
    local time_diff=$((current_time - health_timestamp))
    
    if [[ $time_diff -gt $HEALTH_TIMEOUT ]]; then
        return 1  # Health file —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–π
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ health file
    if command -v jq &> /dev/null; then
        local status=$(jq -r '.status // "unknown"' "$HEALTH_FILE" 2>/dev/null)
        if [[ "$status" == "running" ]]; then
            return 0  # –í—Å–µ —Ö–æ—Ä–æ—à–æ
        fi
    else
        # –ï—Å–ª–∏ jq –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ç–æ –Ω–∞–ª–∏—á–∏–µ "running"
        if grep -q '"status": "running"' "$HEALTH_FILE" 2>/dev/null; then
            return 0
        fi
    fi
    
    return 1  # –ü—Ä–æ–±–ª–µ–º—ã —Å health check
}

# –ó–∞–ø—É—Å–∫ autoposter
start_autoposter() {
    log "üöÄ –ó–∞–ø—É—Å–∫ autoposter..."
    
    cd "$SCRIPT_DIR"
    nohup "$PYTHON_CMD" "$AUTOPOSTER_SCRIPT" start > /dev/null 2>&1 &
    local pid=$!
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
    echo "$pid" > "$PID_FILE"
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    sleep 5
    if kill -0 "$pid" 2>/dev/null; then
        log "‚úÖ Autoposter –∑–∞–ø—É—â–µ–Ω —Å PID: $pid"
        RESTART_COUNT=$((RESTART_COUNT + 1))
        LAST_RESTART_TIME=$(date +%s)
        return 0
    else
        error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å autoposter"
        rm -f "$PID_FILE"
        return 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ autoposter
stop_autoposter() {
    local pid=$(get_autoposter_pid)
    if [[ -n "$pid" ]]; then
        log "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ autoposter (PID: $pid)..."
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º graceful shutdown
        kill -TERM "$pid" 2>/dev/null
        
        # –ñ–¥–µ–º –¥–æ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è graceful shutdown
        local count=0
        while [[ $count -lt 30 ]] && kill -0 "$pid" 2>/dev/null; do
            sleep 1
            ((count++))
        done
        
        # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º
        if kill -0 "$pid" 2>/dev/null; then
            log "‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ autoposter..."
            kill -KILL "$pid" 2>/dev/null
            sleep 2
        fi
        
        rm -f "$PID_FILE"
        log "‚úÖ Autoposter –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log "‚ÑπÔ∏è Autoposter –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ autoposter
restart_autoposter() {
    log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ autoposter..."
    stop_autoposter
    sleep 3
    start_autoposter
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∏
check_restart_limits() {
    local current_time=$(date +%s)
    local time_since_last_restart=$((current_time - LAST_RESTART_TIME))
    
    # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ —á–∞—Å–∞ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    if [[ $time_since_last_restart -gt 3600 ]]; then
        RESTART_COUNT=0
    fi
    
    if [[ $RESTART_COUNT -ge $MAX_RESTART_ATTEMPTS ]]; then
        error "‚ùå –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤ ($MAX_RESTART_ATTEMPTS). –û—Å—Ç–∞–Ω–æ–≤–∫–∞ keepalive."
        return 1
    fi
    
    return 0
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main_loop() {
    log "üîß –ó–∞–ø—É—Å–∫ KeepAlive –¥–ª—è autoposter"
    log "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SCRIPT_DIR"
    log "üêç Python: $PYTHON_CMD"
    log "‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: ${CHECK_INTERVAL}s"
    log "üïí –¢–∞–π–º–∞—É—Ç health check: ${HEALTH_TIMEOUT}s"
    
    while true; do
        local pid=$(get_autoposter_pid)
        local health_ok=false
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        if [[ -n "$pid" ]]; then
            # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º health
            if check_health; then
                health_ok=true
                log "‚úÖ Autoposter —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ (PID: $pid)"
            else
                log "‚ö†Ô∏è Autoposter –∑–∞–ø—É—â–µ–Ω, –Ω–æ health check –Ω–µ—É–¥–∞—á–µ–Ω (PID: $pid)"
            fi
        else
            log "‚ùå Autoposter –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        fi
        
        # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ
        if [[ -z "$pid" ]] || [[ "$health_ok" == false ]]; then
            if check_restart_limits; then
                log "üîÑ –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫... (–ø–æ–ø—ã—Ç–∫–∞ $((RESTART_COUNT + 1))/$MAX_RESTART_ATTEMPTS)"
                restart_autoposter
                
                if [[ $? -eq 0 ]]; then
                    log "‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É—Å–ø–µ—à–µ–Ω"
                else
                    error "‚ùå –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–µ—É–¥–∞—á–µ–Ω"
                    sleep $RESTART_DELAY
                fi
            else
                break
            fi
        fi
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        sleep $CHECK_INTERVAL
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
cleanup() {
    log "üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è KeepAlive"
    stop_autoposter
    exit 0
}

trap cleanup SIGTERM SIGINT

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-start}" in
    start)
        ensure_log_dir
        check_script_exists
        check_python
        main_loop
        ;;
    stop)
        stop_autoposter
        ;;
    restart)
        restart_autoposter
        ;;
    status)
        pid=$(get_autoposter_pid)
        if [[ -n "$pid" ]]; then
            echo "‚úÖ Autoposter –∑–∞–ø—É—â–µ–Ω (PID: $pid)"
            if check_health; then
                echo "‚úÖ Health check: OK"
            else
                echo "‚ö†Ô∏è Health check: FAILED"
            fi
            exit 0
        else
            echo "‚ùå Autoposter –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            exit 1
        fi
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status}"
        echo ""
        echo "start   - –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ autoposter"
        echo "stop    - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ autoposter"
        echo "restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ autoposter"
        echo "status  - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ autoposter"
        exit 1
        ;;
esac 